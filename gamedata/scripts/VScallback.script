-- File:        VScallback.SCRIPT
-- Copyright:   2009-2010 ARS Team
-- Authors:     Red75, sokol_jack & xStream
-- Last edit:   Xmk, Skunk


----------- Framework initialization -------------------------
-- Вспомогательная функция инициализации модуля.
local function init_module_if_exists(module)
  if _G[module] and _G[module].init then
    _G[module].init()
  else
    xr_s.warning("init_module_if_exists: cannot find module "..module)
  end
end

-- Эта функция вызывается при старте игры. Необходимо дать возможность модулям зарегистрировать коллбэки.
function init()
  init_module_if_exists("VSm")
end


-- колбеки
local callbacks={
	game_load={},
	update={},
	npc_death={},
	monster_death={},
	monster_spawn={}
}

function RegisterCallback(name,func)
  if callbacks[name]==nil then
    abort("register_callback: callback name '%s' is unknown.",name)
  end
  callbacks[name][func]=true
end

function UnRegisterCallback(name,func)
  if callbacks[name]==nil then
    abort("register_callback: callback name '%s' is unknown.",name)
  end
  callbacks[name][func]=nil
end


----------- actor binder -------------------------
-- колбек на старт игры
function OnGameLoad()
  math.randomseed(device():time_global())
  if not callbacks.game_load then return end
  for func,o in pairs(callbacks.game_load) do
    func()
  end
end

-- колбэк на апдейт актора (работает постоянно)
function OnActorUpdate(binder)
  if not callbacks.update then return end
  for func,o in pairs(callbacks.update) do
    func(binder)
  end
end


-- колбек на смерть нпц
function OnNpcDeth(victim, who)
  if not callbacks.npc_death then return end
  for func,o in pairs(callbacks.npc_death) do
    func(victim,who)
  end
end


-- колбэк на спавн монстра
function OnMutantSpawn(obj)
  if not callbacks.monster_spawn then return end
  for func,o in pairs(callbacks.monster_spawn) do
    func(obj)
  end
end

-- колбек на смерть монстра
function OnMutantDeth(victim, who)
  if not callbacks.monster_death then return end
  for func,o in pairs(callbacks.monster_death) do
    func(victim,who)
  end
end